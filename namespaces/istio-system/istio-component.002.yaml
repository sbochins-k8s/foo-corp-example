---
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio-grafana-custom-resources
  namespace: istio-system
  labels:
    app: grafana
    chart: grafana
    heritage: Tiller
    release: istio
    istio: grafana
data:
  custom-resources.yaml: "apiVersion: authentication.istio.io/v1alpha1\nkind: Policy\n\
    metadata:\n  name: grafana-ports-mtls-disabled\n  namespace: istio-system\n  labels:\n\
    \    app: grafana\n    chart: grafana\n    heritage: Tiller\n    release: istio\n\
    spec:\n  targets:\n  - name: grafana\n    ports:\n    - number: 3000"
  run.sh: "#!/bin/sh\n\nset -x\n\nif [ \"$#\" -ne \"1\" ]; then\n    echo \"first\
    \ argument should be path to custom resource yaml\"\n    exit 1\nfi\n\npathToResourceYAML=${1}\n\
    \nkubectl get validatingwebhookconfiguration istio-galley 2>/dev/null\nif [ \"\
    $?\" -eq 0 ]; then\n    echo \"istio-galley validatingwebhookconfiguration found\
    \ - waiting for istio-galley deployment to be ready\"\n    while true; do\n  \
    \      kubectl -n istio-system get deployment istio-galley 2>/dev/null\n     \
    \   if [ \"$?\" -eq 0 ]; then\n            break\n        fi\n        sleep 1\n\
    \    done\n    kubectl -n istio-system rollout status deployment istio-galley\n\
    \    if [ \"$?\" -ne 0 ]; then\n        echo \"istio-galley deployment rollout\
    \ status check failed\"\n        exit 1\n    fi\n    echo \"istio-galley deployment\
    \ ready for configuration validation\"\nfi\nsleep 5\nkubectl apply -f ${pathToResourceYAML}"
