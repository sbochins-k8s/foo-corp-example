---
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio-security-custom-resources
  namespace: istio-system
  labels:
    app: security
    chart: security
    heritage: Tiller
    release: istio
    istio: citadel
data:
  custom-resources.yaml: "# Authentication policy to enable permissive mode for all\
    \ services (that have sidecar) in the mesh.\napiVersion: \"authentication.istio.io/v1alpha1\"\
    \nkind: \"MeshPolicy\"\nmetadata:\n  name: \"default\"\n  labels:\n    app: security\n\
    \    chart: security\n    heritage: Tiller\n    release: istio\nspec:\n  peers:\n\
    \  - mtls:\n      mode: PERMISSIVE   "
  run.sh: "#!/bin/sh\n\nset -x\n\nif [ \"$#\" -ne \"1\" ]; then\n    echo \"first\
    \ argument should be path to custom resource yaml\"\n    exit 1\nfi\n\npathToResourceYAML=${1}\n\
    \nkubectl get validatingwebhookconfiguration istio-galley 2>/dev/null\nif [ \"\
    $?\" -eq 0 ]; then\n    echo \"istio-galley validatingwebhookconfiguration found\
    \ - waiting for istio-galley deployment to be ready\"\n    while true; do\n  \
    \      kubectl -n istio-system get deployment istio-galley 2>/dev/null\n     \
    \   if [ \"$?\" -eq 0 ]; then\n            break\n        fi\n        sleep 1\n\
    \    done\n    kubectl -n istio-system rollout status deployment istio-galley\n\
    \    if [ \"$?\" -ne 0 ]; then\n        echo \"istio-galley deployment rollout\
    \ status check failed\"\n        exit 1\n    fi\n    echo \"istio-galley deployment\
    \ ready for configuration validation\"\nfi\nsleep 5\nkubectl apply -f ${pathToResourceYAML}"
